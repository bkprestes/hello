{"version":3,"sources":["ui/NavBar.js","ui/HomeCard.js","container/Home.js","App.js","ui/ReleaseForm.js","container/Releases.js","container/Backlog.js","container/Sprints.js","serviceWorker.js","index.js"],"names":["NavBar","props","react_default","a","createElement","className","es","to","logo","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","role","aria-haspopup","aria-labelledby","placeholder","HomeCard","style","paddingTop","width","height","src","alt","title","text","onClick","action","button","Home","homeCardRelease","hashHistory","push","homeCardBacklog","homeCardSprints","ui_HomeCard","this","Component","App","ui_NavBar","children","ReleaseForm","_ref","_releaseName","_releaseDate","submitHandler","clearForm","value","onSubmit","e","name","date","for","ref","input","Releases","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","state","releases","releaseName","releaseDate","preventDefault","myRelease","length","setState","concat","ui_ReleaseForm","scope","map","release","index","key","Backlog","Sprints","Boolean","window","location","hostname","match","ReactDOM","render","history","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6QA8CeA,EA3CA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,gBAAgBJ,EAAMO,MAC7CN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBI,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAClLZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BU,GAAG,0BACzCb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAYF,UAAU,YAA/B,YAAmDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,aAAnD,MAEJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAWF,UAAU,YAA9B,YAEJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAWF,UAAU,YAA9B,YAEJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA2BW,KAAK,IAAID,GAAG,iBAAiBE,KAAK,SAASP,cAAY,WAAWQ,gBAAc,OAAOL,gBAAc,SAA7I,YAGAX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBc,kBAAgB,kBAC/CjB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBW,KAAK,KAAlC,UACAd,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBW,KAAK,KAAlC,kBACAd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBW,KAAK,KAAlC,yBAGJd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBW,KAAK,KAAtC,cAGJd,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAChBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBAAuBI,KAAK,SAASW,YAAY,SAASN,aAAW,WACtFZ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCAAuCI,KAAK,UAA9D,cCxBDY,EAbE,SAACpB,GAAD,OACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBiB,MAAO,CAACC,WAAY,SACjDrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOiB,MAAO,CAACE,MAAO,UACrCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCAAuCiB,MAAO,CAACC,WAAY,MAAOC,MAAO,QAASC,OAAQ,SAAYC,IAAI,sFAAsFC,IAAI,mBACnNzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcJ,EAAM2B,OAClC1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaJ,EAAM4B,MAChC3B,EAAAC,EAAAC,cAAA,UAAQY,KAAK,IAAIX,UAAU,kBAAkByB,QAAS7B,EAAM8B,QAAU9B,EAAM+B,YCLnEC,6MAEjBC,gBAAkB,CACdN,MAAO,WACPC,KAAM,kBACNG,OAAQ,WACRD,OAAQ,kBAAMI,IAAYC,KAAK,iBAGnCC,gBAAkB,CACdT,MAAO,UACPC,KAAM,iBACNG,OAAQ,WACRD,OAAQ,kBAAMI,IAAYC,KAAK,gBAGnCE,gBAAkB,CACdV,MAAO,UACPC,KAAM,iBACNG,OAAQ,WACRD,OAAQ,kBAAMI,IAAYC,KAAK,sFAI/B,OACIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACmC,EAAD,CAAUX,MAAOY,KAAKN,gBAAgBN,MACtCC,KAAMW,KAAKN,gBAAgBL,KAC3BG,OAAQQ,KAAKN,gBAAgBF,OAC7BD,OAAQS,KAAKN,gBAAgBH,SAC7B7B,EAAAC,EAAAC,cAACmC,EAAaC,KAAKH,iBACnBnC,EAAAC,EAAAC,cAACmC,EAAaC,KAAKF,0BAhCLG,aCcnBC,mLATX,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACuC,EAAD,CAAQnC,KAHC,mBAIRgC,KAAKvC,MAAM2C,iBANFH,qBC4BHI,EAhCK,SAAAC,GAAqB,IACjCC,EAAcC,EADAC,EAAmBH,EAAnBG,cAUZC,EAAY,WACdH,EAAaI,MAAQ,GACrBH,EAAaG,MAAQ,IAGzB,OACIjD,EAAAC,EAAAC,cAAA,QAAMgD,SAdW,SAACC,GAClBJ,EAAcI,EAAG,CACjBC,KAAMP,EAAaI,MACnBI,KAAMP,EAAaG,QAEnBD,KAS8B7C,UAAU,eACpCH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAUmD,IAAI,wBAA/B,gBACAtD,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOgD,IAAK,SAAAC,GAAK,OAAIX,EAAeW,GAAOrD,UAAU,4BAA4BU,GAAG,uBAAuBK,YAAY,iBAEnIlB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAUmD,IAAI,iCAA/B,gBACAtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAEfH,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOgD,IAAK,SAAAC,GAAK,OAAIV,EAAeU,GAAOrD,UAAU,eAAeU,GAAG,gCAAgCK,YAAY,kBAGnIlB,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASJ,UAAU,wBAAhC,UC1BSsD,cAEjB,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAArB,KAAAmB,IACTC,EAAAC,OAAAE,EAAA,EAAAF,CAAArB,KAAAqB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAzB,QACK0B,aAAeN,EAAKM,aAAaC,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACpBA,EAAKS,MAAQ,CACTC,SAAU,CACN,CACIvD,GAAI,EACJwD,YAAa,aACbC,YAAa,cAEjB,CACIzD,GAAI,EACJwD,YAAa,aACbC,YAAa,cAEjB,CACIzD,GAAI,EACJwD,YAAa,aACbC,YAAa,cAEjB,CACIzD,GAAI,EACJwD,YAAa,aACbC,YAAa,gBAvBhBZ,4EA6BAP,KAAgB,IAAZC,EAAYR,EAAZQ,KAAMC,EAAMT,EAANS,KACnBF,EAAEoB,iBACF,IAAIJ,EAAQ7B,KAAK6B,MACbK,EAAY,CACZ3D,GAAIsD,EAAMC,SAASK,OAAQ,EAC3BJ,YAAajB,EACbkB,YAAajB,GAGjBf,KAAKoC,SAAS,CAACN,SAAUD,EAAMC,SAASO,OAAOH,sCAK/C,OACIxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYiB,MAAO,CAACC,WAAY,SAC3CrB,EAAAC,EAAAC,cAAC0E,EAAD,CAAa7B,cAAiBT,KAAK0B,eACnChE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,MAAI2E,MAAM,OAAV,KACA7E,EAAAC,EAAAC,cAAA,MAAI2E,MAAM,OAAV,gBACA7E,EAAAC,EAAAC,cAAA,MAAI2E,MAAM,OAAV,kBAGJ7E,EAAAC,EAAAC,cAAA,aACKoC,KAAK6B,MAAMC,SAASU,IAAI,SAACC,EAASC,GAC/B,OAAQhF,EAAAC,EAAAC,cAAA,MAAI+E,IAAKF,EAAQlE,IACrBb,EAAAC,EAAAC,cAAA,MAAI2E,MAAM,OAAOE,EAAQlE,GAAzB,KACAb,EAAAC,EAAAC,cAAA,UAAK6E,EAAQV,aACbrE,EAAAC,EAAAC,cAAA,UAAK6E,EAAQT,aACbtE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASJ,UAAU,yBAAhC,yBA9DEoC,aCDjB2C,mLAEb,OACIlF,EAAAC,EAAAC,cAAA,4BAHyBqC,aCAhB4C,mLAEb,OACInF,EAAAC,EAAAC,cAAA,4BAHyBqC,aCUjB6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPNC,IAASC,OACL1F,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQuF,QAAS1D,KACbjC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOwF,KAAK,IAAIC,UAAWrD,GACvBxC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYyF,UAAW9D,IACvB/B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOwF,KAAK,YAAYC,UAAWpC,IACnCzD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOwF,KAAK,WAAWC,UAAWX,IAClClF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOwF,KAAK,WAAWC,UAAWV,KAEtCnF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOwF,KAAK,YAAYC,UAAWpC,IACnCzD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOwF,KAAK,WAAWC,UAAWX,IAClClF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOwF,KAAK,WAAWC,UAAWV,KAGtCW,SAASC,eAAe,SDyGtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.67ea9189.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router';\n\nconst NavBar = (props) =>{\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link to=\"/\" className=\"navbar-brand\">{props.logo}</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                    <Link to=\"/releases\" className=\"nav-link\">Releases <span className=\"sr-only\">(current)</span> </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/backlog\" className=\"nav-link\">Backlog</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/sprints\" className=\"nav-link\">Sprints</Link>\n                </li>\n                <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Dropdown\n                    </a>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                    <div className=\"dropdown-divider\"></div>\n                    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n                    </div>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\n                </li>\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\">\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n            </div>\n            </nav>\n    );\n};\n\nexport default NavBar;","import React from 'react';\n\nconst HomeCard = (props) => (\n    <div className=\"col-12 col-sm-4\" style={{paddingTop: '10px'}}>\n        <div className=\"card\" style={{width: \"18rem\"}}>\n        <img className=\"card-img-top rounded mx-auto d-block\" style={{paddingTop: '3px', width: '100px', height: '100px'}}   src=\"https://bognarjunior.files.wordpress.com/2018/03/if_react-js_logo_1174949.png?w=256\" alt=\"Card image cap\"/>\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{props.title}</h5>\n            <p className=\"card-text\">{props.text}</p>\n            <button href=\"#\" className=\"btn btn-primary\" onClick={props.action} >{props.button}</button>\n        </div>\n        </div>\n    </div>\n);\n\nexport default HomeCard;","import React, {Component} from 'react';\nimport {hashHistory} from 'react-router';\nimport HomeCard from '../ui/HomeCard';\n\nexport default class Home extends Component{\n\n    homeCardRelease = {\n        title: 'Releases',\n        text: 'Manage Releases',\n        button: 'Click Me',\n        action: () => hashHistory.push('/releases')\n    }\n\n    homeCardBacklog = {\n        title: 'Backlog',\n        text: 'Manage Backlog',\n        button: 'Click Me',\n        action: () => hashHistory.push('/backlog')\n    }\n\n    homeCardSprints = {\n        title: 'Sprints',\n        text: 'Manage Sprints',\n        button: 'Click Me',\n        action: () => hashHistory.push('/sprints')\n    }\n\n    render(){\n        return(\n            <div className=\"container text-center\">\n                <div className=\"row\">\n                    <HomeCard title={this.homeCardRelease.title}\n                    text={this.homeCardRelease.text}\n                    button={this.homeCardRelease.button}\n                    action={this.homeCardRelease.action} />\n                    <HomeCard {...this.homeCardBacklog} />\n                    <HomeCard {...this.homeCardSprints} />\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './ui/NavBar';\nimport Home from \"./container/Home\";\n\n\nclass App extends Component {\n  render() {\n    const logo = 'Rebeca Andrade'\n    return (\n      <div className=\"container\">\n        <NavBar logo={logo}/>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst ReleaseForm = ({submitHandler}) => {\n    let _releaseName, _releaseDate;\n    const handleSubmit = (e) => {\n        submitHandler(e, {\n        name: _releaseName.value, \n        date: _releaseDate.value\n        });\n        clearForm();\n    }\n\n    const clearForm = () => {\n        _releaseName.value = '';\n        _releaseDate.value = '';\n    }\n\n    return(\n        <form onSubmit={handleSubmit} className=\"form-inline\">\n            <label className=\"sr-only\" for=\"inlineFormInputName2\">Release Name</label>\n            <input type=\"text\" ref={input => _releaseName = input} className=\"form-control mb-2 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"Set the Name\"/>\n\n            <label className=\"sr-only\" for=\"inlineFormInputGroupUsername2\">Release Date</label>\n            <div className=\"input-group mb-2 mr-sm-2\">\n                <div className=\"input-group-prepend\">\n                </div>\n                <input type=\"text\" ref={input => _releaseDate = input} className=\"form-control\" id=\"inlineFormInputGroupUsername2\" placeholder=\"Set the Date\"/>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary mb-2\">Save</button>\n        </form>\n    );\n}\n\nexport default ReleaseForm;","import React, {Component} from 'react';\nimport ReleaseForm from '../ui/ReleaseForm';\n\nexport default class Releases extends Component{\n\n    constructor(){\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            releases: [\n                {\n                    id: 1,\n                    releaseName: 'Release 01',\n                    releaseDate: '01/01/2019'\n                },\n                {\n                    id: 2,\n                    releaseName: 'Release 02',\n                    releaseDate: '01/01/2020'\n                },\n                {\n                    id: 3,\n                    releaseName: 'Release 03',\n                    releaseDate: '01/01/2021'\n                },\n                {\n                    id: 4,\n                    releaseName: 'Release 04',\n                    releaseDate: '01/01/2022'\n                }\n            ]\n        }\n    }\n\n    handleSubmit(e, {name, date}){\n        e.preventDefault();\n        var state = this.state;\n        var myRelease = {\n            id: state.releases.length +1,\n            releaseName: name,\n            releaseDate: date\n        }\n\n        this.setState({releases: state.releases.concat(myRelease)});\n       \n    }\n\n    render(){\n        return(\n            <div className=\"container\" style={{paddingTop: '25px'}}>\n                <ReleaseForm submitHandler = {this.handleSubmit}/>\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Release Name</th>\n                        <th scope=\"col\">Release Date</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.releases.map((release, index) => {\n                            return (<tr key={release.id}>\n                                <th scope=\"row\">{release.id} </th>\n                                <td>{release.releaseName}</td>\n                                <td>{release.releaseDate}</td>\n                                <td><button type=\"button\" className=\"btn btn-danger btn-sm\">Remover</button></td>\n                            </tr>);\n                        })}\n                        \n                        \n                    </tbody>\n                </table>\n            </div>\n\n        );\n    }\n}","import React, {Component} from 'react';\n\nexport default class Backlog extends Component{\n    render(){\n        return(\n            <h1>Backlog</h1>\n        );\n    }\n}","import React, {Component} from 'react';\n\nexport default class Sprints extends Component{\n    render(){\n        return(\n            <h1>Sprints</h1>\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Releases from './container/Releases';\nimport Backlog from './container/Backlog';\nimport Sprints from './container/Sprints';\nimport * as serviceWorker from './serviceWorker';\nimport {Router, Route, IndexRoute, hashHistory} from 'react-router';\nimport Home from './container/Home';\n\nReactDOM.render(\n    <Router history={hashHistory} >\n        <Route path=\"/\" component={App}>\n            <IndexRoute component={Home}/>\n            <Route path=\"/releases\" component={Releases} />\n            <Route path=\"/backlog\" component={Backlog} />\n            <Route path=\"/sprints\" component={Sprints} />\n        </Route>\n        <Route path=\"/releases\" component={Releases} />\n        <Route path=\"/backlog\" component={Backlog} />\n        <Route path=\"/sprints\" component={Sprints} />\n    </Router>\n    , \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}