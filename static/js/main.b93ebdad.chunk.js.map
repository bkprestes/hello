{"version":3,"sources":["ui/NavBar.js","ui/HomeCard.js","container/Home.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","react_default","a","createElement","className","href","logo","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","placeholder","HomeCard","style","width","paddingTop","height","src","alt","title","text","onClick","action","button","Home","homeCardRelease","alert","homeCardBacklog","homeCardSprints","ui_HomeCard","this","Component","App","ui_NavBar","Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b93ebdad.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nconst NavBar = (props) =>{\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"#\">{props.logo}</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                    <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Link</a>\n                </li>\n                <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Dropdown\n                    </a>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                    <div className=\"dropdown-divider\"></div>\n                    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n                    </div>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\n                </li>\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\">\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n            </div>\n            </nav>\n    );\n};\n\nexport default NavBar;","import React from 'react';\n\nconst HomeCard = (props) => (\n    <div className=\"col-12 col-sm-4\">\n        <div className=\"card\" style={{width: \"18rem\"}}>\n        <img className=\"card-img-top rounded mx-auto d-block\" style={{paddingTop: '3px', width: '100px', height: '100px'}}   src=\"https://bognarjunior.files.wordpress.com/2018/03/if_react-js_logo_1174949.png?w=256\" alt=\"Card image cap\"/>\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{props.title}</h5>\n            <p className=\"card-text\">{props.text}</p>\n            <a href=\"#\" className=\"btn btn-primary\" onClick={props.action} >{props.button}</a>\n        </div>\n        </div>\n    </div>\n);\n\nexport default HomeCard;","import React, {Component} from 'react';\nimport HomeCard from '../ui/HomeCard';\n\nexport default class Home extends Component{\n\n    homeCardRelease = {\n        title: 'Releases',\n        text: 'Manage Releases',\n        button: 'Click Me',\n        action: () => alert('Releases Clicked')\n    }\n\n    homeCardBacklog = {\n        title: 'Backlog',\n        text: 'Manage Backlog',\n        button: 'Click Me',\n        action: () => alert('Backlog Clicked')\n    }\n\n    homeCardSprints = {\n        title: 'Sprints',\n        text: 'Manage Sprints',\n        button: 'Click Me',\n        action: () => alert('Sprints Clicked')\n    }\n\n    render(){\n        return(\n            <div className=\"container text-center\">\n                <div className=\"row\">\n                    <HomeCard title={this.homeCardRelease.title}\n                    text={this.homeCardRelease.text}\n                    button={this.homeCardRelease.button}\n                    action={this.homeCardRelease.action} />\n                    <HomeCard {...this.homeCardBacklog} />\n                    <HomeCard {...this.homeCardSprints} />\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './ui/NavBar';\nimport Home from \"./container/Home\";\n\n\nclass App extends Component {\n  render() {\n    const logo = 'Rebeca Andrade'\n    return (\n      <div className=\"container\">\n        <NavBar logo={logo}/>\n        <Home/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}